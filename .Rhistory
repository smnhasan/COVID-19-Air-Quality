0.774327122153209,
0.755725190839695,
0.771969696969697,
0.906788793103448,
0.724740321057602,
0.796686746987952,
0.86944,
0.824324324324324,
0.884885764499121,
0.696192052980132,
0.854711100455526,
0.829015544041451,
0.865494685200327,
0.829101707498144,
0.79130282920014,
0.842668344870988,
0.84710351377018,
0.884672619047619,
0.793916942873855,
0.793999577435031,
0.820736640408772,
0.742533794404275,
0.861383285302594,
0.778711484593838,
0.848130841121495,
0.835380835380835,
0.831831831831832,
0.832417582417582,
0.701686121919585,
0.833592534992224,
0.841590214067278,
0.881883479648843,
0.794921875,
0.795264623955432,
0.811382113821138,
0.754871505224513,
0.677743902439024,
0.802988844453799,
0.783916513198281,
0.758250191864927,
0.779790660225443,
0.732721912872584,
0.638810198300283,
0.720214190093708,
0.823768974453906,
0.74868804664723,
0.772599311854864,
0.667366652666947,
0.815288104089219,
0.867505551443375,
0.737339471771262,
0.873647984267453,
0.833971291866029,
0.834688346883469,
0.86079048618398,
0.716432380029084,
0.821544715447154,
0.799609946367626,
0.877822045152722,
0.861514919663351,
0.728448275862069,
0.818238993710692,
0.883005977796755,
0.831266846361186,
0.773093139133768,
0.779624277456647,
0.766623544631307,
0.822412155745489,
0.763527758257203,
0.775729288214702,
0.832236842105263,
0.797610681658468,
0.863453815261044,
0.703577512776831,
0.782518641259321,
0.851318944844125,
0.632436837815811,
0.787018255578093,
0.827307069616838,
0.848091302636757,
0.847148736037625,
0.901828029790115,
0.830060422960725,
0.771019677996422,
0.766135155656796,
0.88842504743833,
0.918331114070129,
0.825168539325843,
0.853161843515541,
0.86762360446571,
0.79655990510083,
0.801973684210526,
0.669575113808801,
0.770017035775128,
0.724908996359854,
0.813732928679818,
0.820689655172414,
0.8529028049576,
0.766635426429241,
0.731386392811297,
0.774171029668412,
0.717128642501777,
0.741063102269195,
0.788273615635179,
0.807504078303426,
0.807126948775056,
0.665037471489084,
0.813599458728011,
0.715686274509804,
0.763478260869565,
0.789668615984405,
0.8319876970396,
0.776565656565657,
0.731009174311927,
0.794161901895877,
0.744436201780415,
0.799102691924227,
0.790322580645161,
0.811027837259101,
0.787042976266838,
0.76855003403676,
0.8944298629338,
0.77503355704698,
0.889128869690425,
0.76231122783979,
0.907616167170745,
0.784003421727973,
0.856331963202192,
0.874633431085044,
0.83728981206726,
0.780499075785582,
0.876892028254289,
0.793554413825315,
0.803731152568362,
0.716500072432276,
0.898522550544324,
0.785126686410003,
0.82670906200318,
0.816842105263158,
0.875479662317728,
0.728149487643159,
0.889792484576556,
0.899560577526679,
0.877533039647577,
0.808107319918344,
0.709382151029748,
0.723434704830054,
0.822131704005431,
0.819260766361478,
0.764492753623188,
0.836284560422491,
0.837008214440121,
0.718959731543624,
0.801806451612903,
0.768950297447707,
0.744475488950978,
0.899501661129568,
0.753973299427845,
0.726256983240223,
0.749717301168489,
0.780431786862655,
0.858537806710065,
0.770748512370811,
0.863960504662644,
0.760550733313379,
0.797770088427528,
0.899915611814346,
0.793960058451047,
0.771748492678725,
0.724608043626448,
0.801309022907901,
0.731055429005315,
0.785465521244486,
0.799583333333333,
0.770567786790266,
0.783446712018141,
0.920759962928638,
0.838092933204259,
0.745496009122007,
0.890120036934441,
0.704766786263455,
0.801175516822051,
0.799321650650085,
0.775191675794085,
0.683599419448476,
0.818857142857143,
0.799891097195753,
0.719323571870489,
0.755128205128205,
0.817520019412764,
0.899449035812672,
0.778773857721226,
0.774801961523953,
0.823173803526448,
0.742040285899935,
0.861621621621622,
0.890583301563096,
0.539780337530137,
0.842770608375033,
0.82583850931677,
0.829504666188083,
0.933111757374325,
0.806307266141061,
0.731891056596484,
0.777613412228797,
0.926508071367884,
0.926218256691833,
0.716817118020729,
0.802770986145069,
0.829890992541595,
0.684284214210711,
0.787901606425703,
0.779213483146067,
0.813207547169811,
0.762634496250408,
0.781902552204176,
0.803155522163787,
0.817757009345794,
0.728255275347401,
0.878250103177879,
0.855348169418521,
0.805023923444976,
0.843676355066771,
0.841759684832567,
0.847419596110696,
0.855704697986577,
0.895585738539898,
0.861549006168609,
0.804764128911723,
0.825403392635499,
0.903494176372712,
0.718984962406015,
0.758555729984301,
0.92887537993921,
0.790364583333333,
0.787215909090909,
0.770433229120143,
0.723523898781631,
0.80972972972973,
0.883950617283951,
0.838150289017341,
0.86322188449848,
0.685042561815971,
0.878787878787879,
0.843649946638207,
0.870761670761671,
0.920634920634921,
0.868565717141429,
0.890168290522586,
0.916748607014094,
0.857330415754923,
0.742527530152071,
0.919543870763383,
0.793752870923289,
0.864365971107544,
0.84963436928702,
0.751438925602217,
0.912897822445561,
0.729624838292367,
0.788514851485149,
0.845502645502646,
0.804368471035138,
0.795492487479132,
0.86874764949229,
0.803037726604606,
0.845509539320614,
0.73122866894198,
0.837344818849759,
0.884427032321254,
0.847470238095238,
0.90729194903768,
0.845481049562682,
0.889642695612845,
0.770331325301205,
0.824826717076244,
0.893736501079914,
0.898522550544324,
0.712792127921279,
0.813581037796284,
0.601936665794295,
0.867766203703704,
0.799298860648554,
0.885334178017105,
0.875537403267412,
0.784479588083854,
0.82279848730416,
0.745368171021378,
0.849945828819068,
0.861819326408562,
0.810086324398001,
0.871127224785761,
0.86122244488978,
0.856916578669483,
0.816916653780733,
0.904093413802152,
0.859220092531395,
0.935167494586677,
0.925113464447806,
0.976798143851508,
0.954022988505747,
0.950761601133546,
0.94518044769301,
0.937123169681309,
0.835381630012937,
0.92967472287843,
0.904879175003848,
0.843567251461988,
0.815625,
0.900659521846661,
0.857071213640923,
0.93039283252929,
0.910828025477707
)
Dat
dat
mean(dat)
CIs <- group.CI(Dengue$Gfexp ~ Dengue$Month, data=Dengue, ci = 0.95)
CIs <- CI(dat,  ci = 0.95)
library(Rmisc)
CIs <- CI(dat,  ci = 0.95)
CIs
mean(dat)
library(MASS)
require(foreign)
require(ggplot2)
install.packages("ggplot2")
############BBK################
.libPaths()
library(MASS)
.libPaths("C:\Program Files\R\R-4.3.0\library")
.libPaths("C:\\Program Files\\R\\R-4.3.0\\library")
############BBK################
.libPaths()
library(MASS)
library(MASS)
require(foreign)
require(ggplot2)
install.packages("ggplot2")
require(ggplot2)
require(maptools)
library(tidyverse)
library(betareg)
library(car)
library(gapminder)
library(dplyr)
library(ggplot2)
library(dplyr)
library(patchwork) # To display 2 charts together
library(hrbrthemes)
library(psych) # for descriptive analysis
library(forecast)
library(lmtest)
library(tseries)
library(forecast)
library(MASS)
library(tseries)
library(forecast)
library(lubridate)
library(ggplot2)
library(zoo)
library(Rcpp)
library(prophet)
library(data.table)
library(dplyr)
library(psych)
require(MASS) # to access Animals data sets
require(scales) # to access break formatting functions
library(mgcv)
library(GGally)
library(mgcv)
library(visreg)
library("ggplot2")
library("GGally")
setwd('E:\\ResearchProject\\Aminul\\COVID-19 Air Quality\\COVID-19 Air Quality')
Air_Covid <- read.csv("Air_Covid.csv")
Air_Covid2 <- Air_Covid[8:17]
Air_Covid3 <- subset(Air_Covid2, select = - c(COVID_BKK, PM10.BKK))         # Apply subset function
Air_Covid3
summary(Air_Covid3)
sd(Air_Covid3$COVID_BKK_WM)
sd(Air_Covid3$PM2.5_BKK)
sd(Air_Covid3$WS.BKK)
sd(Air_Covid3$RH.BKK)
sd(Air_Covid3$AH.BKK)
sd(Air_Covid3$P_BKK)
sd(Air_Covid3$R_BKK)
sd(Air_Covid3$T.BKK)
t.test(Air_Covid[Air_Covid$Y == '2020', 'COVID_BKK_WM'], Air_Covid[Air_Covid$Y == '2021', 'COVID_BKK_WM'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'PM2.5_BKK'], Air_Covid[Air_Covid$Y == '2021', 'PM2.5_BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'WS.BKK'], Air_Covid[Air_Covid$Y == '2021', 'WS.BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'RH.BKK'], Air_Covid[Air_Covid$Y == '2021', 'RH.BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'AH.BKK'], Air_Covid[Air_Covid$Y == '2021', 'AH.BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'P_BKK'], Air_Covid[Air_Covid$Y == '2021', 'P_BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'R_BKK'], Air_Covid[Air_Covid$Y == '2021', 'R_BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'T.BKK'], Air_Covid[Air_Covid$Y == '2021', 'T.BKK'])
ggpairs(Air_Covid3)
Air_Covid$time <- as.Date(Air_Covid$date, format = "%d/%m/%Y")
Air_Covid$COVID_BKK_WM = as.numeric(Air_Covid$COVID_BKK_WM)
Air_Covid$PM2.5_BKK = as.numeric(Air_Covid$PM2.5_BKK)
Air_Covid$WS.BKK = as.numeric(Air_Covid$WS.BKK)
Air_Covid$RH.BKK = as.numeric(Air_Covid$RH.BKK)
Air_Covid$AH.BKK = as.numeric(Air_Covid$AH.BKK)
Air_Covid$P_BKK = as.numeric(Air_Covid$P_BKK)
Air_Covid$R_BKK = as.numeric(Air_Covid$R_BKK)
Air_Covid$T.BKK = as.numeric(Air_Covid$T.BKK)
Air_Covid$Season = as.factor(Air_Covid$Season)
ggplot(Air_Covid, aes(x=time, y=COVID_BBK_WM,color=Season)) + stat_smooth()
ggplot(Air_Covid, aes(x=time, y=COVID_BKK_WM,color=Season)) + stat_smooth()
Air_Covid$time = as.numeric(Air_Covid$time)
gamint3 = gam(COVID_BBK_WM ~ s(time) ,data=Air_Covid)
summary(gamint3)
Air_Covid$time = as.numeric(Air_Covid$time)
gamint3 = gam(COVID_BKK_WM ~ s(time) ,data=Air_Covid)
summary(gamint3)
visreg(gamint3 ,"time")
gamint3 = gam(COVID_BKK_WM ~ s(time) + Season + PM2.5_BKK + WS.BKK + RH.BKK + AH.BKK + P_BKK + R_BKK + T.BKK,data=Air_Covid)
summary(gamint3)
acf(resid(gamint3), lag.max = 7, main = "ACF")
acf(resid(gamint3), lag.max = 14, main = "ACF")
acf(resid(gamint3), lag.max = 21, main = "ACF")
pacf(resid(gamint3), lag.max = 7, main = "pACF")
pacf(resid(gamint3), lag.max = 14, main = "pACF")
pacf(resid(gamint3), lag.max = 21, main = "pACF")
Air_Covid$COVID_BKK_WM_d1 <- diff(Air_Covid$COVID_BKK_WM)
Air_Covid$COVID_BKK_WM_d1 <- diff(Air_Covid$COVID_BKK_WM)
Air_Covid$COVID_BKK_WM_d1 <- diff(Air_Covid$COVID_BKK_WM)
Air_Covid$time <- as.Date(Air_Covid$date, format = "%d/%m/%Y")
Air_Covid$COVID_BKK_WM = as.numeric(Air_Covid$COVID_BKK_WM)
Air_Covid$PM2.5_BKK = as.numeric(Air_Covid$PM2.5_BKK)
Air_Covid$WS.BKK = as.numeric(Air_Covid$WS.BKK)
Air_Covid$RH.BKK = as.numeric(Air_Covid$RH.BKK)
Air_Covid$AH.BKK = as.numeric(Air_Covid$AH.BKK)
Air_Covid$P_BKK = as.numeric(Air_Covid$P_BKK)
Air_Covid$R_BKK = as.numeric(Air_Covid$R_BKK)
Air_Covid$T.BKK = as.numeric(Air_Covid$T.BKK)
Air_Covid$Season = as.factor(Air_Covid$Season)
ggplot(Air_Covid, aes(x=time, y=COVID_BKK_WM,color=Season)) + stat_smooth()
library(mgcv)
library(GGally)
library(mgcv)
library(visreg)
setwd('E:\\ResearchProject\\Aminul\\COVID-19 Air Quality\\COVID-19 Air Quality')
Air_Covid <- read.csv("Air_Covid.csv")
Air_Covid2 <- Air_Covid[8:17]
Air_Covid3 <- subset(Air_Covid2, select = - c(COVID_BBK, PM10.BBK))         # Apply subset function
Air_Covid3
summary(Air_Covid3)
sd(Air_Covid3$COVID_BBK_WM)
sd(Air_Covid3$PM2.5_BBK)
sd(Air_Covid3$WS.BBK)
sd(Air_Covid3$RH.BBK)
setwd('E:\\ResearchProject\\Aminul\\COVID-19 Air Quality\\COVID-19 Air Quality')
Air_Covid <- read.csv("Air_Covid.csv")
Air_Covid2 <- Air_Covid[8:17]
Air_Covid3 <- subset(Air_Covid2, select = - c(COVID_BKK, PM10.BKK))         # Apply subset function
Air_Covid3
summary(Air_Covid3)
sd(Air_Covid3$COVID_BKK_WM)
sd(Air_Covid3$PM2.5_BKK)
sd(Air_Covid3$WS.BKK)
sd(Air_Covid3$RH.BKK)
sd(Air_Covid3$AH.BKK)
sd(Air_Covid3$P_BKK)
sd(Air_Covid3$R_BKK)
sd(Air_Covid3$T.BKK)
t.test(Air_Covid[Air_Covid$Y == '2020', 'COVID_BBK_WM'], Air_Covid[Air_Covid$Y == '2021', 'COVID_BBK_WM'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'COVID_BKK_WM'], Air_Covid[Air_Covid$Y == '2021', 'COVID_BKK_WM'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'PM2.5_BKK'], Air_Covid[Air_Covid$Y == '2021', 'PM2.5_BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'WS.BKK'], Air_Covid[Air_Covid$Y == '2021', 'WS.BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'RH.BKK'], Air_Covid[Air_Covid$Y == '2021', 'RH.BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'AH.BKK'], Air_Covid[Air_Covid$Y == '2021', 'AH.BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'P_BKK'], Air_Covid[Air_Covid$Y == '2021', 'P_BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'R_BKK'], Air_Covid[Air_Covid$Y == '2021', 'R_BKK'])
t.test(Air_Covid[Air_Covid$Y == '2020', 'T.BKK'], Air_Covid[Air_Covid$Y == '2021', 'T.BKK'])
ggpairs(Air_Covid3)
Air_Covid$time <- as.Date(Air_Covid$date, format = "%d/%m/%Y")
Air_Covid$COVID_BKK_WM = as.numeric(Air_Covid$COVID_BKK_WM)
Air_Covid$PM2.5_BKK = as.numeric(Air_Covid$PM2.5_BKK)
Air_Covid$WS.BKK = as.numeric(Air_Covid$WS.BKK)
Air_Covid$RH.BKK = as.numeric(Air_Covid$RH.BKK)
Air_Covid$AH.BKK = as.numeric(Air_Covid$AH.BKK)
Air_Covid$P_BKK = as.numeric(Air_Covid$P_BKK)
Air_Covid$R_BKK = as.numeric(Air_Covid$R_BKK)
Air_Covid$T.BKK = as.numeric(Air_Covid$T.BKK)
Air_Covid$Season = as.factor(Air_Covid$Season)
a <- ggplot(Air_Covid, aes(x=time, y=COVID_BKK_WM,color=Season)) + stat_smooth()+ theme(legend.title = element_text(color = "Black", size = 28),
legend.text = element_text(color = "Black", size = 28),
text = element_text(size = 28))
b <- ggplot(Air_Covid, aes(x=time, y=PM2.5_BKK,color=Season)) + stat_smooth()+ theme(legend.title = element_text(color = "Black", size = 28),
legend.text = element_text(color = "Black", size = 28),
text = element_text(size = 28))
c <- ggplot(Air_Covid, aes(x=time, y=WS.BKK,color=Season)) + stat_smooth()+ theme(legend.title = element_text(color = "Black", size = 28),
legend.text = element_text(color = "Black", size = 28),
text = element_text(size = 28))
d <- ggplot(Air_Covid, aes(x=time, y=RH.BKK,color=Season)) + stat_smooth()+ theme(legend.title = element_text(color = "Black", size = 28),
legend.text = element_text(color = "Black", size = 28),
text = element_text(size = 28))
e <- ggplot(Air_Covid, aes(x=time, y=AH.BKK,color=Season)) + stat_smooth()+ theme(legend.title = element_text(color = "Black", size = 28),
legend.text = element_text(color = "Black", size = 28),
text = element_text(size = 28))
f <- ggplot(Air_Covid, aes(x=time, y=P_BKK,color=Season)) + stat_smooth()+ theme(legend.title = element_text(color = "Black", size = 28),
legend.text = element_text(color = "Black", size = 28),
text = element_text(size = 28))
g <- ggplot(Air_Covid, aes(x=time, y=R_BKK,color=Season)) + stat_smooth()+ theme(legend.title = element_text(color = "Black", size = 28),
legend.text = element_text(color = "Black", size = 28),
text = element_text(size = 28))
h <- ggplot(Air_Covid, aes(x=time, y=T.BKK,color=Season)) + stat_smooth()+ theme(legend.title = element_text(color = "Black", size = 28),
legend.text = element_text(color = "Black", size = 28),
text = element_text(size = 28))
tiff("Graph.tiff", units="in", width=60, height=30, res=300)
gridExtra::grid.arrange(a,b,c,d,e,f,g,h)
dev.off()
